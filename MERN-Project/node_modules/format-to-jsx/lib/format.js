import{isValidElement as t,createElement as e,Fragment as n,cloneElement as r}from"react";function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}export default function(c){if(!c||0===c.length)throw new Error("[format-to-jsx]: format() method has been called without a template string!");for(var i=arguments.length,f=new Array(i>1?i-1:0),u=1;u<i;u++)f[u-1]=arguments[u];if(0===f.length)return c;var l=/\{([^{}]+)\}/g,p=!1,s=f&&"object"===o(f[0])&&!t(f[0])?f[0]:f.reduce((function(t,e,n){return t[n]=e,t}),{}),m=c.split(l);if("production"!==process.env.NODE_ENV){var y=Array.from(new Set(m.reduce((function(t,e,n){return 0==(1&n)?t:[].concat(a(t),[e])}),[]))).length,d=Object.keys(s).length;y!==d&&console.warn("[format-to-jsx]: Template '".concat(c,"' contains different number of placeholders than passed arguments ([").concat(Object.keys(s).join(","),"]): found ").concat(y," placeholders while ").concat(d," arguments have been provided."))}var b=m.map((function(t,e){if(0==(1&e))return t;var n=t,r=s[n];return n in s?("string"!=typeof r&&"number"!=typeof r&&(p=!0),r):("production"!==process.env.NODE_ENV&&console.warn("[format-to-jsx]: Failed replacing the template '".concat(c,"' - '").concat(n,"' index wasn't provided!")),"")}));return p?e(n,null,b.map((function(e,n){return t(e)?r(e,{key:n}):e}))):b.join("")}
